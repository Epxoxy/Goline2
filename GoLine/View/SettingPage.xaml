<Page x:Class="GoLine.SettingPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
      xmlns:controls="http://Epxcontrols.org"
             xmlns:local="clr-namespace:GoLine"
      xmlns:sys="clr-namespace:System;assembly=mscorlib"
      xmlns:props="clr-namespace:GoLine.Properties"
             mc:Ignorable="d"
             d:DesignHeight="400" d:DesignWidth="400">
    <Page.CacheMode>
        <BitmapCache EnableClearType="True" SnapsToDevicePixels="True" />
    </Page.CacheMode>
    <Page.RenderTransform>
        <TranslateTransform />
    </Page.RenderTransform>
    <Page.Resources>
        <DataTemplate x:Key="ColorWithNameTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="28" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Ellipse Fill="{Binding}" Height="20" Width="20"/>
                <TextBlock VerticalAlignment="Center" Text="{Binding}" Grid.Column="1"/>
            </Grid>
        </DataTemplate>
        <Style x:Key="LeftHeaderControlStyle" TargetType="{x:Type HeaderedContentControl}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter ContentSource="Header" />
                            <ContentPresenter Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <Grid Background="White" Width="400">
        <Grid.RowDefinitions>
            <RowDefinition Height="36"/>
            <RowDefinition />
        </Grid.RowDefinitions>
        <Border Background="{StaticResource F4F4F4Brush}" BorderBrush="LightGray" BorderThickness="0,0,0,1"/>
        <TextBlock Margin="4,0" Text="{x:Static props:Resources.Settings}" Foreground="DimGray" VerticalAlignment="Center" FontSize="20" />
        <TabControl Grid.Row="1" TabStripPlacement="Left" Padding="7,4,0,0">
            <TabItem Header="{x:Static props:Resources.Sounds}" x:Name="SoundsSetting">
                <StackPanel HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,0">
                    <TextBlock Text="{x:Static props:Resources.Music}" Foreground="DimGray" FontSize="25" Margin="4,0"/>
                    <StackPanel x:Name="MusicSetting" Width="200" Margin="7">
                        <Grid Margin="0">
                            <!--<Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Button Content="Front" Width="40" Height="40" Click="PlayFrontClick"
                                    Template="{StaticResource EllipseButtonBase}" BorderBrush="LightGray" Background="LightGray"
                                    BorderThickness="0" HorizontalAlignment="Left" VerticalAlignment="Center"/>-->
                            <controls:ToggleSwitch x:Name="PlayToggle" BorderThickness="0" Content="{x:Static props:Resources.Music}" FontSize="18" Padding="7" Margin="0,4"
                                           OnText="{x:Static props:Resources.On}"  OffText="{x:Static props:Resources.Off}"
                                                   IsChecked="{Binding Source={x:Static props:Settings.Default},Path=EnableMusic}"/>
                            <!--<ToggleButton x:Name="PlayToggle" Width="48" Height="48" Template="{StaticResource EllipseButtonBase}"
                                          Click="PlayToggleClick"
                                          Grid.Column="1" Background="LightGray" Content="{StaticResource PausePath}" VerticalAlignment="Top">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Checked">
                                        <ei:ChangePropertyAction PropertyName="Content" TargetObject="{Binding ElementName=path}"
                                                                      Value="{StaticResource StartPath}"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="Unchecked">
                                        <ei:ChangePropertyAction PropertyName="Content" TargetObject="{Binding ElementName=path}"
                                                                      Value="{StaticResource PausePath}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ToggleButton>-->
                            <!--<Button Content="Next" Width="40" Height="40" Template="{StaticResource EllipseButtonBase}" Click="PlayNextBtnClick"
                                     Background="LightGray" Margin="4,0" Grid.Column="2" HorizontalAlignment="Right"  VerticalAlignment="Center"/>-->
                        </Grid>
                        <controls:ToggleSwitch x:Name="SoundsToggle" BorderThickness="0" Content="{x:Static props:Resources.SoundsEffects}" FontSize="18" Padding="7" Margin="0,4"
                                               OnText="{x:Static props:Resources.On}"  OffText="{x:Static props:Resources.Off}"
                                               IsChecked="{Binding Source={x:Static props:Settings.Default}, Path=EnableSounds, Mode=TwoWay}"/>
                        <Grid TextElement.Foreground="DimGray" Margin="0,7">
                            <TextBlock Text="{x:Static props:Resources.Volume}" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,24" FontSize="24"/>
                            <local:RingSlider x:Name="VolumeSlider" Maximum="100" Minimum="0" Margin="0,10"
                                              Value="{Binding Source={x:Static props:Settings.Default},Path=Volume}"
                                              Width="200" Height="200" FontSize="60"/>
                        </Grid>
                        <!--<TextBlock TextWrapping="WrapWithOverflow" HorizontalAlignment="Center" Margin="0,20" FontSize="16">
                            <Run Text="Current : " /><Run x:Name="CurrentSongNameTB" Text="Null" />
                        </TextBlock>-->
                        
                    </StackPanel>
                </StackPanel>
            </TabItem>
            <TabItem Header="{x:Static props:Resources.OtherSetting}">
                <ItemsControl VerticalAlignment="Top" Padding="10,4">
                    <HeaderedContentControl Margin="0,4" Style="{StaticResource LeftHeaderControlStyle}">
                        <HeaderedContentControl.Header>
                            <TextBlock Text="{x:Static props:Resources.ChessBrush}" Margin="7,0" FontSize="18"/>
                        </HeaderedContentControl.Header>
                        <ComboBox x:Name="BrushComboBox" ItemsSource="{Binding Source={x:Static props:Settings.Default}, Path=AvaliableBrushes}" Style="{StaticResource ComboBoxStyle}"
                                  SelectionChanged="ComboBoxSelectionChanged" ItemTemplate="{StaticResource ColorWithNameTemplate}">
                        </ComboBox>
                    </HeaderedContentControl>
                    <HeaderedContentControl Margin="0,4" Style="{StaticResource LeftHeaderControlStyle}">
                        <HeaderedContentControl.Header>
                            <TextBlock Text="{x:Static props:Resources.BoardLineColor}" Margin="7,0" FontSize="18"/>
                        </HeaderedContentControl.Header>
                        <ComboBox x:Name="LineBrushComboBox" ItemsSource="{Binding Source={x:Static props:Settings.Default}, Path=AvaliableBrushes}" Style="{StaticResource ComboBoxStyle}"
                                  SelectionChanged="ComboBoxSelectionChanged" ItemTemplate="{StaticResource ColorWithNameTemplate}">
                        </ComboBox>
                    </HeaderedContentControl>
                    <controls:ToggleSwitch x:Name="AutoNoticeBtn" BorderThickness="0" Content="{x:Static props:Resources.AutoNoticeNewest}" FontSize="18" Padding="7,10" Margin="0,4" Click="AutoNoticeBtnBtnClick"
                                           OnText="{x:Static props:Resources.On}"  OffText="{x:Static props:Resources.Off}"/>
                    <controls:ToggleSwitch BorderThickness="0" Content="{x:Static props:Resources.DebugMode}" FontSize="18" Padding="7" Margin="0,4"
                                               OnText="{x:Static props:Resources.On}"  OffText="{x:Static props:Resources.Off}"
                                               IsChecked="{Binding Source={x:Static props:Settings.Default}, Path=DebugMode, Mode=TwoWay}"/>
                    <Button x:Name="SaveBtn" Content="Save" IsEnabled="False" Padding="0,8" Style="{StaticResource FloatBtnStyle}"
                                    Click="SaveChangeBtnClick"/>
                </ItemsControl>
            </TabItem>
        </TabControl>
    </Grid>
</Page>
