<Application x:Class="GoLine2.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:GoLine2"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Epx.Controls;component/Themes/Styles.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Epx.Controls;component/Themes/ComboBoxStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <sys:Boolean x:Key="Boolean.True">True</sys:Boolean>
            <sys:Boolean x:Key="Boolean.False">False</sys:Boolean>
            <Visibility x:Key="Visibility.Visible">Visible</Visibility>
            <Visibility x:Key="Visibility.Collapsed">Collapsed</Visibility>
            <SolidColorBrush x:Key="F4F4F4Brush" Color="#f4f4f4" />
            <FontFamily x:Key="IconFont">pack://application:,,,/GoLine;component/Themes/#iconfont</FontFamily>
            <Path x:Key="PausePath" Data="M0,0 M2,0 L2,3 8,1.5 Z" Height="20" Width="20" Stretch="Fill" Fill="Gray"/>
            <Path x:Key="StartPath" Data="M0,0 M2,0 L2,3 M8,0 L8,3 M10,0" StrokeThickness="2" Height="20" Width="20" Stretch="Fill" Stroke="Gray"/>
            <CubicEase x:Key="CubicEaseOut" EasingMode="EaseOut"/>

            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="TextWrapping" Value="Wrap" />
            </Style>

            <!--#region Button Style-->
            <ControlTemplate x:Key="EllipseButtonBase" TargetType="{x:Type ButtonBase}">
                <Grid>
                    <Ellipse SnapsToDevicePixels="True" UseLayoutRounding="True" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                         Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}" />
                    <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Grid>
            </ControlTemplate>
            <SolidColorBrush x:Key="MouseOver.Foreground" Color="Blue" />
            <SolidColorBrush x:Key="Pressed.Foreground" Color="SkyBlue" />
            <Style x:Key="ChagedForegroundButton" TargetType="{x:Type ButtonBase}">
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <ContentPresenter x:Name="content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            </ContentPresenter>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="SkyBlue" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Foreground" Value="CadetBlue" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.56" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="LightForegroundButton" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource ChagedForegroundButton}">
                <Setter Property="Foreground" Value="DimGray" />
            </Style>

            <Color x:Key="ButtonBase.MouseOver.Background.Color" A="255" R="229" G="229" B="229"/>
            <Color x:Key="ButtonBase.Pressed.Background.Color" A="255" R="202" G="202" B="203"/>
            <Color x:Key="ButtonBase.Disabled.Color" A="255" R="131" G="131" B="131"/>

            <Style x:Key="OriginLightButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="BorderBrush" Value="LightGray"/>
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"
                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="True">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                            To="{StaticResource ButtonBase.MouseOver.Background.Color}"></ColorAnimation>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed" >
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                            To="{StaticResource ButtonBase.Pressed.Background.Color}"></ColorAnimation>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" 
                                            To="{StaticResource ButtonBase.Disabled.Color}"></ColorAnimation>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Padding" Value="1"/>
            </Style>

            <Style x:Key="SpecialEllipseButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="FontSize" Value="16" />
                <Setter Property="Width" Value="70" />
                <Setter Property="Height" Value="70" />
                <Setter Property="Margin" Value="7" />
                <Setter Property="BorderBrush" Value="DimGray"/>
                <Setter Property="Background" Value="White" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="bg" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" 
                                            To="{StaticResource ButtonBase.MouseOver.Background.Color}"></ColorAnimation>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed" >
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="bg" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" 
                                            To="{StaticResource ButtonBase.Pressed.Background.Color}"></ColorAnimation>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="bg" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" 
                                            To="{StaticResource ButtonBase.Disabled.Color}"></ColorAnimation>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <!--<Border x:Name="border" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"
                                    CornerRadius="40"
                                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True">
                                </Border>-->
                                <Ellipse x:Name="bg" StrokeThickness="2" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}"/>
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="SpecialNormalButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Margin" Value="12,7" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="MinWidth" Value="80" />
                <Setter Property="MinHeight" Value="40" />
                <Setter Property="BorderBrush" Value="LightGray" />
                <Setter Property="Background" Value="White" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"
                                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                            To="{StaticResource ButtonBase.MouseOver.Background.Color}"></ColorAnimation>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed" >
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                            To="{StaticResource ButtonBase.Pressed.Background.Color}"></ColorAnimation>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" 
                                            To="{StaticResource ButtonBase.Disabled.Color}"></ColorAnimation>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="SpecialNormalButtonStyle2" BasedOn="{StaticResource SpecialNormalButtonStyle}" TargetType="{x:Type Button}">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="Padding" Value="0,20" />
            </Style>

            <Style x:Key="BackButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Foreground" Value="DimGray" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                <Path Data="M 8 15 L 2 9 L 8 3 M2,9 L18,9" Stroke="{TemplateBinding Foreground}" Fill="Transparent" Stretch="Uniform" Height="20">
                                    <Path.CacheMode>
                                        <BitmapCache EnableClearType="True" SnapsToDevicePixels="True"/>
                                    </Path.CacheMode>
                                </Path>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="LightGray" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Foreground" Value="SkyBlue" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="SpreadEllipseBtnStyle" TargetType="{x:Type Button}">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="BorderBrush" Value="SkyBlue" />
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard RepeatBehavior="Forever">
                                                <ColorAnimation Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)"
                            To="Transparent" Duration="0:0:0"/>
                                                <ColorAnimation Storyboard.TargetName="ellipse" BeginTime="0:0:0.5" 
                            Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)"
                            From="SkyBlue" To="Transparent" Duration="0:0:2"/>
                                                <DoubleAnimation Storyboard.TargetName="ellipse" BeginTime="0:0:0.5" 
                             Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                             From="1" To="1.5" Duration="0:0:2"/>
                                                <DoubleAnimation Storyboard.TargetName="ellipse" BeginTime="0:0:0.5" 
                             Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                             From="1" To="1.5" Duration="0:0:2"/>
                                            </Storyboard>
                                        </VisualState>
                                        <!--<VisualState x:Name="Pressed" />
                                        <VisualState x:Name="MouseOver"/>-->
                                        <VisualState x:Name="Disabled"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border x:Name="border" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"
                                    CornerRadius="200"
                                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True">
                                    <ContentPresenter x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <Ellipse x:Name="ellipse" Focusable="False" RenderTransformOrigin="0.5,0.5" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="2">
                                    <Ellipse.RenderTransform>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--#region Float Button-->

            <Color x:Key="FloatBtn.Static.Color" A="255" R="38" G="166" B="154"/>
            <Color x:Key="FloatBtn.MouseOver.Color" A="255" R="43" G="187" B="173"/>
            <Color x:Key="FloatBtn.Pressed.Color" A="200" R="43" G="187" B="173"/>
            <Color x:Key="FloatBtn.Disable.Color"  A="200" R="131" G="131" B="131"/>
            <Color x:Key="FloatBtn.Disable.Background.Color"  A="255" R="244" G="244" B="244"/>
            <Color x:Key="FloatBtn.Disable.Border.Color"  A="255" R="173" G="178" B="181"/>
            <Color x:Key="FloatBtn.Disable.Foreground.Color"  A="255" R="131" G="131" B="131"/>
            <SolidColorBrush x:Key="FloatBtn.Static.Foreground" Color="White"/>
            <SolidColorBrush x:Key="FloatBtn.Static.Background" Color="{StaticResource FloatBtn.Static.Color}"/>
            <Style x:Key="FloatBtnStyle" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource FloatBtn.Static.Background}" />
                <Setter Property="Foreground" Value="{StaticResource FloatBtn.Static.Foreground}" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="local:FloatExtension.CornerRadius" Value="3" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border CornerRadius="{TemplateBinding local:FloatExtension.CornerRadius}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
                                    SnapsToDevicePixels="True">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource FloatBtn.MouseOver.Color}" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed" >
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource FloatBtn.Pressed.Color}" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource FloatBtn.Disable.Background.Color}" />
                                                <ColorAnimation Duration="0:0:0" Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="{StaticResource FloatBtn.Disable.Foreground.Color}"></ColorAnimation>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--#endregion-->

            <!--#endregion-->
            
            <!--#region TabControl & TabItem-->
            
            <SolidColorBrush x:Key="Pipe.Selected.Fill" Color="#4285F4"/>
            <SolidColorBrush x:Key="Item.Normal.Foreground" Color="#75758b"/>
            <SolidColorBrush x:Key="Item.Selected.Fill" Color="Black"/>
            <Style x:Key="LightTabItemStyle" TargetType="{x:Type TabItem}">
                <Setter Property="Foreground" Value="{StaticResource Item.Normal.Foreground}"/>
                <Setter Property="Background" Value="{StaticResource F4F4F4Brush}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Height" Value="40" />
                <Setter Property="Padding" Value="0,7,12,7" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="5"/>
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Rectangle Visibility="Collapsed" x:Name="SelectPipe" HorizontalAlignment="Left" Width="2" Fill="{StaticResource Pipe.Selected.Fill}" Margin="0,2"/>
                                    <ContentPresenter Grid.Column="1" x:Name="contentPresenter" ContentSource="Header" Focusable="False" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                  VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource Item.Selected.Fill}" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Visibility" TargetName="SelectPipe" Value="Visible" />
                                    <Setter Property="Background" Value="White" />
                                    <Setter Property="Foreground" Value="{StaticResource Item.Selected.Fill}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" TargetName="mainBorder" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type TabControl}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Background" Value="{StaticResource F4F4F4Brush}" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Setter Property="ItemContainerStyle" Value="{StaticResource LightTabItemStyle}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabControl}">
                            <Grid KeyboardNavigation.TabNavigation="Local">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="ColumnDefinition0" />
                                    <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                                    <RowDefinition x:Name="RowDefinition1" Height="*" />
                                </Grid.RowDefinitions>
                                <ScrollViewer x:Name="HeaderPanelScroll"
                                      Grid.Row="0"
                                      Grid.Column="0"
                                      HorizontalScrollBarVisibility="Auto"
                                      Background="{TemplateBinding Background}"
                                      VerticalScrollBarVisibility="Disabled" 
                                      BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                    <TabPanel x:Name="HeaderPanel"
                                      IsItemsHost="True"
                                      KeyboardNavigation.TabIndex="1" />
                                </ScrollViewer>
                                <ContentPresenter x:Name="PART_SelectedContentHost"
                                              Grid.Row="1" Grid.Column="0"
                                              Margin="{TemplateBinding Padding}"
                                              Content="{TemplateBinding SelectedContent}"
                                              ContentSource="SelectedContent"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              ContentStringFormat="{TemplateBinding SelectedContentStringFormat}"
                                              ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TabStripPlacement" Value="Bottom">
                                    <Setter TargetName="HeaderPanelScroll" Property="Grid.Row" Value="1" />
                                    <Setter TargetName="HeaderPanelScroll" Property="Margin" Value="2 0 2 2" />
                                    <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                                    <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
                                </Trigger>
                                <Trigger Property="TabStripPlacement" Value="Left">
                                    <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
                                    <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
                                    <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                                    <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
                                    <Setter TargetName="PART_SelectedContentHost" Property="Grid.Column" Value="1" />
                                    <Setter TargetName="PART_SelectedContentHost" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="HeaderPanelScroll" Property="Grid.Column" Value="0" />
                                    <Setter TargetName="HeaderPanelScroll" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="HeaderPanelScroll" Property="HorizontalScrollBarVisibility" Value="Disabled" />
                                    <Setter TargetName="HeaderPanelScroll" Property="VerticalScrollBarVisibility" Value="Auto" />
                                </Trigger>
                                <Trigger Property="TabStripPlacement" Value="Right">
                                    <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
                                    <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
                                    <Setter TargetName="HeaderPanelScroll" Property="Grid.Column" Value="1" />
                                    <Setter TargetName="HeaderPanelScroll" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="HeaderPanelScroll" Property="HorizontalScrollBarVisibility" Value="Disabled" />
                                    <Setter TargetName="HeaderPanelScroll" Property="Margin" Value="0 2 2 2" />
                                    <Setter TargetName="HeaderPanelScroll" Property="Template" Value="{DynamicResource VerticalScrollViewerTemplate}" />
                                    <Setter TargetName="HeaderPanelScroll" Property="VerticalScrollBarVisibility" Value="Auto" />
                                    <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                                    <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!--#endregion-->

            <!--#region GridView Style-->
            
            <Style x:Key="GridViewColumnHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
                <Setter Property="Padding" Value="4" />
                <Setter Property="FontSize" Value="20" />
                <Setter Property="MinWidth" Value="40" />
                <Setter Property="Foreground" Value="DimGray" />
                <Setter Property="BorderBrush" Value="LightGray" />
                <Setter Property="BorderThickness" Value="0,0,0,1" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="GridViewItemStyle" TargetType="{x:Type ListViewItem}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="FontSize" Value="18" />
                <Setter Property="Padding" Value="0,10,0,4" />
                <Setter Property="BorderThickness" Value="0,0,0,0" />
                <Setter Property="Margin" Value="2" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="Background" Value="White" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                                <GridViewRowPresenter/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" Value="{StaticResource F4F4F4Brush}" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter Property="Background" Value="#e4e4e4" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!--#endregion-->

            <!--#region ListViewItemStyle-->
            <Color x:Key="ControlBase.MouseOver.Background.Color" A="255" R="229" G="229" B="229"/>
            <Color x:Key="ControlBase.Selected.Background.Color" A="255" R="202" G="202" B="203"/>
            <Color x:Key="ControlBase.Selected.Transparent.Color" A="0" R="202" G="202" B="203"/>
            <Color x:Key="ControlBase.Disabled.Color" A="255" R="131" G="131" B="131"/>
            <SolidColorBrush x:Key="ControlBase.Static.BorderBrush" Color="{StaticResource ControlBase.Selected.Background.Color}" />
            <Style x:Key="BasicListViewItemStyle" TargetType="{x:Type ListViewItem}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Setter Property="BorderBrush" Value="{StaticResource ControlBase.Static.BorderBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}"  BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                                To="{StaticResource ControlBase.MouseOver.Background.Color}"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
                                                                To="{StaticResource ControlBase.Disabled.Color}"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="SelectionStates">
                                        <VisualState x:Name="Selected" >
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="rootGrid" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                                To="{StaticResource ControlBase.Selected.Background.Color}"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unselected">
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="rootGrid" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                                To="{StaticResource ControlBase.Selected.Transparent.Color}"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="SelectedUnfocused" >
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0" Storyboard.TargetName="rootGrid" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                                To="{StaticResource ControlBase.Selected.Background.Color}"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid x:Name="rootGrid" Background="Transparent">
                                    <ContentPresenter  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="SpecialLightListViewItemStyle" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource BasicListViewItemStyle}">
                <Setter Property="Margin" Value="12,7" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="MinWidth" Value="180" />
                <Setter Property="MinHeight" Value="40" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Background" Value="White" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Background" Value="White" />
            </Style>

            <Style x:Key="EllipseListViewItemStyle" TargetType="{x:Type ListViewItem}">
                <Setter Property="FontSize" Value="16" />
                <Setter Property="Width" Value="80" />
                <Setter Property="Height" Value="80" />
                <Setter Property="Margin" Value="7" />
                <Setter Property="Background" Value="White" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="BorderBrush" Value="{StaticResource ControlBase.Static.BorderBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="40" BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                                To="{StaticResource ControlBase.MouseOver.Background.Color}"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
                                                                To="{StaticResource ControlBase.Disabled.Color}"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="SelectionStates">
                                        <VisualState x:Name="Selected" >
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="rootGrid" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                                To="{StaticResource ControlBase.Selected.Background.Color}"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unselected">
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="rootGrid" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                                To="{StaticResource ControlBase.Selected.Transparent.Color}"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="SelectedUnfocused" >
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0" Storyboard.TargetName="rootGrid" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                                To="{StaticResource ControlBase.Selected.Background.Color}"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid x:Name="rootGrid" Background="Transparent">
                                    <ContentPresenter  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!--#endregion-->
            
            <!--#region ItemControl-->

            <ItemsPanelTemplate x:Key="VerticalStackPanel">
                <StackPanel Orientation="Vertical"/>
            </ItemsPanelTemplate>

            <ItemsPanelTemplate x:Key="HorizontalStackPanel">
                <StackPanel Orientation="Horizontal"/>
            </ItemsPanelTemplate>

            <!--#endregion-->
            
            <!--#region HeaderContentControl-->

            <DataTemplate x:Key="TitleDataTemplate">
                <TextBlock FontSize="18" Text="{Binding}" Foreground="DimGray" Margin="0,4"/>
            </DataTemplate>
            <Style x:Key="HeaderControlStyle" TargetType="{x:Type HeaderedContentControl}">
                <Setter Property="BorderThickness" Value="0,1,0,0" />
                <Setter Property="BorderBrush" Value="LightGray" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="HeaderTemplate" Value="{StaticResource TitleDataTemplate}"/>
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                            <StackPanel Margin="{TemplateBinding Padding}">
                                <ContentPresenter ContentSource="Header"/>
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}">
                                    <ContentPresenter/>
                                </Border>
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="HeaderControlNoLineStyle" BasedOn="{StaticResource HeaderControlStyle}" TargetType="{x:Type HeaderedContentControl}">
                <Setter Property="BorderThickness" Value="0,0,0,0" />
            </Style>

            <!--#endregion-->


            <Storyboard x:Key="Logining">
                <DoubleAnimation RepeatBehavior="Forever" From="0" To="250" Storyboard.TargetProperty="Width" Duration="0:0:6" />
            </Storyboard>
            <Style x:Key="ProcessRectstyle" TargetType="{x:Type Rectangle}">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Fill" Value="Gray" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="true">
                        <Setter Property="Fill" Value="SkyBlue" />
                        <Trigger.EnterActions>
                            <BeginStoryboard x:Name="LoginingBegin"  HandoffBehavior="SnapshotAndReplace" Storyboard="{StaticResource Logining}">
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <StopStoryboard  BeginStoryboardName="LoginingBegin">
                            </StopStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </Style.Triggers>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>
